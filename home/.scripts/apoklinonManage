#!/bin/bash
# Designed to run at startup after calling localeCheck. 
# if localeCheck fails for whatever reason or you require to switch 
# the apoklinon palette from RGB-256 (or vice versa), send an argument
# into the function from a prompt instead

function switcher() {
    #Switch mode.
    case "$1" in
    "RGB") export apoklinonRGB=1;;
    "rgb") export apoklinonRGB=1;;
    "256") export apoklinonRGB=0;;
    *) echo "ERROR: Valid arguments are 'RGB' or '256'.";;
    esac
}

if [ -n "$1" ]; then
    switcher "$1"
fi

# Apoklinon colours:
resetp="\[\033[0m\]"
export reset="\e[0m"

if [[ $apoklinonRGB -eq 1 ]]; then
   #normal Colours for scripts
   export onyx="\e[1;30m"
   export jazzberry="\e[31m"
   export brick="\e[1;31m"
   export orange="\e[33m"
   export sandy="\e[1;34m"
   export flavescent="\e[1;32m"
   export lemon="\e[1;33m"
   export lgray="\e[37m"
   export davgray="\e[30m"
   export lavender="\e[35m"
   export blue="\e[34m"
   export aqua="\e[36m"
   export apple="\e[32m"
   export khaki="\e[1;33m"
   export gray="\e[1;36m"
   export dgray="\e[1;37m"
   #Escaped Colours for prompt
   onyxp="\[\033[1;30m\]"
   jazzberryp="\[\033[31m\]"
   brickp="\[\033[1;31m\]"
   orangep="\[\033[33m\]"
   sandyp="\[\033[1;34m\]"
   flavescentp="\[\033[1;32m\]"
   lemonp="\[\033[1;33m\]"
   lgrayp="\[\033[37m\]"
   davgrayp="\[\033[30m\]"
   lavenderp="\[\033[35m\]"
   bluep="\[\033[34m\]"
   aquap="\[\033[36m\]"
   applep="\[\033[32m\]"
   khakip="\[\033[1;33m\]"
   grayp="\[\033[1;36m\]"
   dgrayp="\[\033[1;37m\]"
else
   #normal Colours for scripts
   export onyx="\e[38;5;235m"
   export jazzberry="\e[38;5;125m"
   export brick="\e[38;5;167m"
   export orange="\e[38;5;203m"
   export sandy="\e[38;5;215m"
   export flavescent="\e[38;5;222m"
   export lemon="\e[38;5;229m"
   export lgray="\e[38;5;252m"
   export davgray="\e[38;5;240m"
   export lavender="\e[38;5;61m"
   export blue="\e[38;5;67m"
   export aqua="\e[38;5;73m"
   export apple="\e[38;5;151m"
   export khaki="\e[38;5;192m"
   export gray="\e[38;5;244m"
   export dgray="\e[38;5;248m"
   #Escaped Colours for prompt
   onyxp="\[\033[38;5;235m\]"
   jazzberryp="\[\033[38;5;125m\]"
   brickp="\[\033[38;5;167m\]"
   orangep="\[\033[38;5;203m\]"
   sandyp="\[\033[38;5;215m\]"
   flavescentp="\[\033[38;5;222m\]"
   lemonp="\[\033[38;5;229m\]"
   lgrayp="\[\033[38;5;252m\]"
   davgrayp="\[\033[38;5;240m\]"
   lavenderp="\[\033[38;5;61m\]"
   bluep="\[\033[38;5;67m\]"
   aquap="\[\033[38;5;73m\]"
   applep="\[\033[38;5;151m\]"
   khakip="\[\033[38;5;192m\]"
   grayp="\[\033[38;5;244m\]"
   dgrayp="\[\033[38;5;248m\]"
fi


function updatePrompt() {
  host=${HOSTNAME%%[.0-9]*}
  Host=${host[@]^}
  PathShort="\w"
  export PS1=$davgrayp$Host$resetp'$(git branch &>/dev/null;\
  if [ $? -eq 0 ]; then \
      echo "$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
      if [ "$?" -eq "0" ]; then \
          # @4 - Clean repository - nothing to commit
          echo "'$bluep'"$(__git_ps1 " (%s)"); \
      else \
         # @5 - Changes to working tree
         echo "'$brickp'"$(__git_ps1 " {%s}"); \
      fi) '$sandyp$PathShort$resetp'\$ "; \
  else \
     # @2 - Prompt when not in GIT repo
     echo " '$aquap$PathShort$resetp'\$ "; \
  fi)'

  #This bites me on the ass if I have custom overrides on the prompt. Call them here:
  [ -f ~/.dotfiles/includes/"$host"/bashrc ] && source ~/.dotfiles/includes/"$host"/bashrc
}


if [ -n "$1" ]; then
    #Update prompt (ie, this has been called interactively, not from .bashrc)
    updatePrompt
    blueg=${blue#\\e[}
    export GREP_OPTIONS='--color=auto' GREP_COLOR=${blueg%m}
fi

